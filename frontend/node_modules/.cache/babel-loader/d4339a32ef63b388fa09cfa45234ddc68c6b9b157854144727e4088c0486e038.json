{"ast":null,"code":"import _asyncToGenerator from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorValues from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorValues.js\";\nimport _regenerator from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _wrapAsyncGenerator from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport \"core-js/modules/es.symbol.async-iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array-buffer.constructor.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport var streamChunk = /*#__PURE__*/_regenerator().m(function streamChunk(chunk, chunkSize) {\n  var len, pos, end;\n  return _regenerator().w(function (_context) {\n    while (1) switch (_context.n) {\n      case 0:\n        len = chunk.byteLength;\n        if (!(!chunkSize || len < chunkSize)) {\n          _context.n = 2;\n          break;\n        }\n        _context.n = 1;\n        return chunk;\n      case 1:\n        return _context.a(2);\n      case 2:\n        pos = 0;\n      case 3:\n        if (!(pos < len)) {\n          _context.n = 5;\n          break;\n        }\n        end = pos + chunkSize;\n        _context.n = 4;\n        return chunk.slice(pos, end);\n      case 4:\n        pos = end;\n        _context.n = 3;\n        break;\n      case 5:\n        return _context.a(2);\n    }\n  }, streamChunk);\n});\nexport var readBytes = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator(/*#__PURE__*/_regenerator().m(function _callee(iterable, chunkSize) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk, _t;\n    return _regenerator().w(function (_context2) {\n      while (1) switch (_context2.n) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context2.p = 1;\n          _iterator = _asyncIterator(readStream(iterable));\n        case 2:\n          _context2.n = 3;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 3:\n          if (!(_iteratorAbruptCompletion = !(_step = _context2.v).done)) {\n            _context2.n = 5;\n            break;\n          }\n          chunk = _step.value;\n          return _context2.d(_regeneratorValues(_asyncGeneratorDelegate(_asyncIterator(streamChunk(chunk, chunkSize)), _awaitAsyncGenerator)), 4);\n        case 4:\n          _iteratorAbruptCompletion = false;\n          _context2.n = 2;\n          break;\n        case 5:\n          _context2.n = 7;\n          break;\n        case 6:\n          _context2.p = 6;\n          _t = _context2.v;\n          _didIteratorError = true;\n          _iteratorError = _t;\n        case 7:\n          _context2.p = 7;\n          _context2.p = 8;\n          if (!(_iteratorAbruptCompletion && _iterator[\"return\"] != null)) {\n            _context2.n = 9;\n            break;\n          }\n          _context2.n = 9;\n          return _awaitAsyncGenerator(_iterator[\"return\"]());\n        case 9:\n          _context2.p = 9;\n          if (!_didIteratorError) {\n            _context2.n = 10;\n            break;\n          }\n          throw _iteratorError;\n        case 10:\n          return _context2.f(9);\n        case 11:\n          return _context2.f(7);\n        case 12:\n          return _context2.a(2);\n      }\n    }, _callee, null, [[8,, 9, 11], [1, 6, 7, 12]]);\n  }));\n  return function readBytes(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar readStream = /*#__PURE__*/function () {\n  var _ref2 = _wrapAsyncGenerator(/*#__PURE__*/_regenerator().m(function _callee2(stream) {\n    var reader, _yield$_awaitAsyncGen, done, value;\n    return _regenerator().w(function (_context3) {\n      while (1) switch (_context3.n) {\n        case 0:\n          if (!stream[Symbol.asyncIterator]) {\n            _context3.n = 2;\n            break;\n          }\n          return _context3.d(_regeneratorValues(_asyncGeneratorDelegate(_asyncIterator(stream), _awaitAsyncGenerator)), 1);\n        case 1:\n          return _context3.a(2);\n        case 2:\n          reader = stream.getReader();\n          _context3.p = 3;\n        case 4:\n          _context3.n = 5;\n          return _awaitAsyncGenerator(reader.read());\n        case 5:\n          _yield$_awaitAsyncGen = _context3.v;\n          done = _yield$_awaitAsyncGen.done;\n          value = _yield$_awaitAsyncGen.value;\n          if (!done) {\n            _context3.n = 6;\n            break;\n          }\n          return _context3.a(3, 8);\n        case 6:\n          _context3.n = 7;\n          return value;\n        case 7:\n          _context3.n = 4;\n          break;\n        case 8:\n          _context3.p = 8;\n          _context3.n = 9;\n          return _awaitAsyncGenerator(reader.cancel());\n        case 9:\n          return _context3.f(8);\n        case 10:\n          return _context3.a(2);\n      }\n    }, _callee2, null, [[3,, 8, 10]]);\n  }));\n  return function readStream(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var trackStream = function trackStream(stream, chunkSize, onProgress, onFinish) {\n  var iterator = readBytes(stream, chunkSize);\n  var bytes = 0;\n  var done;\n  var _onFinish = function _onFinish(e) {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n  return new ReadableStream({\n    pull: function pull(controller) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _yield$iterator$next, _done, value, len, loadedBytes, _t2;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.p = 0;\n              _context4.n = 1;\n              return iterator.next();\n            case 1:\n              _yield$iterator$next = _context4.v;\n              _done = _yield$iterator$next.done;\n              value = _yield$iterator$next.value;\n              if (!_done) {\n                _context4.n = 2;\n                break;\n              }\n              _onFinish();\n              controller.close();\n              return _context4.a(2);\n            case 2:\n              len = value.byteLength;\n              if (onProgress) {\n                loadedBytes = bytes += len;\n                onProgress(loadedBytes);\n              }\n              controller.enqueue(new Uint8Array(value));\n              _context4.n = 4;\n              break;\n            case 3:\n              _context4.p = 3;\n              _t2 = _context4.v;\n              _onFinish(_t2);\n              throw _t2;\n            case 4:\n              return _context4.a(2);\n          }\n        }, _callee3, null, [[0, 3]]);\n      }))();\n    },\n    cancel: function cancel(reason) {\n      _onFinish(reason);\n      return iterator[\"return\"]();\n    }\n  }, {\n    highWaterMark: 2\n  });\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}