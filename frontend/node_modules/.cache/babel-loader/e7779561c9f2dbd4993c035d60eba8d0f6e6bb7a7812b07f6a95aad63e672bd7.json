{"ast":null,"code":"import _regenerator from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _toConsumableArray from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/phpDemo/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { HOOK_PLUGIN_SETTINGS_SET } from './const.js';\nimport { now as _now } from './time.js';\nexport var ApiProxy = /*#__PURE__*/function () {\n  function ApiProxy(plugin, hook) {\n    var _this = this;\n    _classCallCheck(this, ApiProxy);\n    this.target = null;\n    this.targetQueue = [];\n    this.onQueue = [];\n    this.plugin = plugin;\n    this.hook = hook;\n    var defaultSettings = {};\n    if (plugin.settings) {\n      for (var id in plugin.settings) {\n        var item = plugin.settings[id];\n        defaultSettings[id] = item.defaultValue;\n      }\n    }\n    var localSettingsSaveId = \"__vue-devtools-plugin-settings__\".concat(plugin.id);\n    var currentSettings = Object.assign({}, defaultSettings);\n    try {\n      var raw = localStorage.getItem(localSettingsSaveId);\n      var data = JSON.parse(raw);\n      Object.assign(currentSettings, data);\n    } catch (e) {\n      // noop\n    }\n    this.fallbacks = {\n      getSettings: function getSettings() {\n        return currentSettings;\n      },\n      setSettings: function setSettings(value) {\n        try {\n          localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n        } catch (e) {\n          // noop\n        }\n        currentSettings = value;\n      },\n      now: function now() {\n        return _now();\n      }\n    };\n    if (hook) {\n      hook.on(HOOK_PLUGIN_SETTINGS_SET, function (pluginId, value) {\n        if (pluginId === _this.plugin.id) {\n          _this.fallbacks.setSettings(value);\n        }\n      });\n    }\n    this.proxiedOn = new Proxy({}, {\n      get: function get(_target, prop) {\n        if (_this.target) {\n          return _this.target.on[prop];\n        } else {\n          return function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            _this.onQueue.push({\n              method: prop,\n              args: args\n            });\n          };\n        }\n      }\n    });\n    this.proxiedTarget = new Proxy({}, {\n      get: function get(_target, prop) {\n        if (_this.target) {\n          return _this.target[prop];\n        } else if (prop === 'on') {\n          return _this.proxiedOn;\n        } else if (Object.keys(_this.fallbacks).includes(prop)) {\n          return function () {\n            var _this$fallbacks;\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n            _this.targetQueue.push({\n              method: prop,\n              args: args,\n              resolve: function resolve() {}\n            });\n            return (_this$fallbacks = _this.fallbacks)[prop].apply(_this$fallbacks, args);\n          };\n        } else {\n          return function () {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n            return new Promise(function (resolve) {\n              _this.targetQueue.push({\n                method: prop,\n                args: args,\n                resolve: resolve\n              });\n            });\n          };\n        }\n      }\n    });\n  }\n  return _createClass(ApiProxy, [{\n    key: \"setRealTarget\",\n    value: function () {\n      var _setRealTarget = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(target) {\n        var _iterator, _step, _this$target$on, item, _iterator2, _step2, _this$target, _item, _t, _t2, _t3;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              this.target = target;\n              _iterator = _createForOfIteratorHelper(this.onQueue);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  item = _step.value;\n                  (_this$target$on = this.target.on)[item.method].apply(_this$target$on, _toConsumableArray(item.args));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              _iterator2 = _createForOfIteratorHelper(this.targetQueue);\n              _context.p = 1;\n              _iterator2.s();\n            case 2:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.n = 5;\n                break;\n              }\n              _item = _step2.value;\n              _t = _item;\n              _context.n = 3;\n              return (_this$target = this.target)[_item.method].apply(_this$target, _toConsumableArray(_item.args));\n            case 3:\n              _t2 = _context.v;\n              _t.resolve.call(_t, _t2);\n            case 4:\n              _context.n = 2;\n              break;\n            case 5:\n              _context.n = 7;\n              break;\n            case 6:\n              _context.p = 6;\n              _t3 = _context.v;\n              _iterator2.e(_t3);\n            case 7:\n              _context.p = 7;\n              _iterator2.f();\n              return _context.f(7);\n            case 8:\n              return _context.a(2);\n          }\n        }, _callee, this, [[1, 6, 7, 8]]);\n      }));\n      function setRealTarget(_x) {\n        return _setRealTarget.apply(this, arguments);\n      }\n      return setRealTarget;\n    }()\n  }]);\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}